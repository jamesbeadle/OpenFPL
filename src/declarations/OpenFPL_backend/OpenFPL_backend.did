type SeasonId = nat16;
type Result_2 = 
 variant {
   err: Error;
   ok: text;
 };
type Result_1 = 
 variant {
   err: Error;
   ok: vec CanisterId;
 };
type Result = 
 variant {
   err: Error;
   ok;
 };
type PlayerId = nat16;
type LeagueId = nat16;
type Error = 
 variant {
   AlreadyExists;
   CanisterCreateError;
   DecodeError;
   DuplicateData;
   IncorrectSetup;
   InsufficientFunds;
   InvalidData;
   InvalidProperty;
   MaxDataExceeded;
   NotAllowed;
   NotAuthorized;
   NotFound;
   SystemOnHold;
 };
type CanisterId = text;
service : {
  getActiveLeaderboardCanisterId: () -> (Result_2);
  getLeaderboardCanisterIds: () -> (Result_1);
  getManagerCanisterIds: () -> (Result_1);
  notifyAppsOfLoanExpired: (LeagueId, PlayerId) -> (Result);
  notifyAppsOfPositionChange: (LeagueId, PlayerId) -> (Result);
  notifyAppsOfRetirement: (LeagueId, PlayerId) -> (Result);
  notifyAppsOfSeasonComplete: (LeagueId, SeasonId) -> (Result);
}
