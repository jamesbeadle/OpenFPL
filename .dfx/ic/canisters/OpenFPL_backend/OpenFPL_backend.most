// Version: 1.0.0
type CalendarMonth = Nat8;
type CanisterId = Text;
type ClubId = Nat16;
type CountryId = Nat16;
type DataHash = {category : Text; hash : Text};
type GameweekNumber = Nat8;
type HighScoreRecord =
  {createDate : Int; points : Int16; recordType : RecordType};
type LeaderboardEntry =
  {
    points : Int16;
    position : Nat;
    positionText : Text;
    principalId : Text;
    username : Text
  };
type List<T> = ?(T, List<T>);
type MonthlyRewards =
  {month : CalendarMonth; rewards : List<RewardEntry>; seasonId : SeasonId};
type PlayerDTO =
  {
    clubId : ClubId;
    dateOfBirth : Int;
    firstName : Text;
    id : Nat16;
    lastName : Text;
    nationality : CountryId;
    position : PlayerPosition;
    shirtNumber : Nat8;
    status : PlayerStatus;
    valueQuarterMillions : Nat16
  };
type PlayerPosition = {#Defender; #Forward; #Goalkeeper; #Midfielder};
type PlayerStatus = {#Active; #FreeAgent; #OnLoan; #Retired};
type PrincipalId = Text;
type RecordType = {#MonthlyHighScore; #SeasonHighScore; #WeeklyHighScore};
type RewardEntry =
  {
    amount : Nat64;
    position : Nat;
    principalId : Text;
    rewardType : RewardType
  };
type RewardPool =
  {
    allTimeMonthlyHighScorePool : Nat64;
    allTimeSeasonHighScorePool : Nat64;
    allTimeWeeklyHighScorePool : Nat64;
    highestScoringMatchPlayerPool : Nat64;
    monthlyLeaderboardPool : Nat64;
    mostValuableTeamPool : Nat64;
    seasonId : SeasonId;
    seasonLeaderboardPool : Nat64;
    weeklyLeaderboardPool : Nat64
  };
type RewardType =
  {
    #HighestScoringPlayer;
    #MonthlyATHScore;
    #MonthlyLeaderboard;
    #MostValuableTeam;
    #SeasonATHScore;
    #SeasonLeaderboard;
    #WeeklyATHScore;
    #WeeklyLeaderboard
  };
type RewardsList = {rewards : List<RewardEntry>};
type SeasonId = Nat16;
type SeasonRewards = {rewards : List<RewardEntry>; seasonId : SeasonId};
type TeamValueLeaderboard =
  {entries : List<LeaderboardEntry>; seasonId : SeasonId; totalEntries : Nat};
type WeeklyRewards =
  {
    gameweek : GameweekNumber;
    rewards : List<RewardEntry>;
    seasonId : SeasonId
  };
actor {
  stable var stable_active_leaderbord_canister_id : Text;
  stable var stable_active_manager_canister_id : Text;
  stable var stable_data_hashes : [DataHash];
  stable var stable_high_scoring_player_rewards : [RewardsList];
  stable var stable_manager_canister_ids : [(PrincipalId, CanisterId)];
  stable var stable_monthly_all_time_high_scores : [HighScoreRecord];
  stable var stable_monthly_ath_prize_pool : Nat64;
  stable var stable_monthly_leaderboard_canister_ids :
    [(SeasonId, [(CalendarMonth, CanisterId)])];
  stable var stable_monthly_rewards : [MonthlyRewards];
  stable var stable_most_valuable_team_rewards : [RewardsList];
  stable var stable_player_snapshots :
    [(SeasonId, [(GameweekNumber, [PlayerDTO])])];
  stable var stable_reward_pools : [(SeasonId, RewardPool)];
  stable var stable_season_all_time_high_scores : [HighScoreRecord];
  stable var stable_season_ath_prize_pool : Nat64;
  stable var stable_season_leaderboard_canister_ids :
    [(SeasonId, CanisterId)];
  stable var stable_season_rewards : [SeasonRewards];
  stable var stable_system_state :
    {
      calculationGameweek : GameweekNumber;
      calculationMonth : CalendarMonth;
      calculationSeasonId : SeasonId;
      onHold : Bool;
      pickTeamGameweek : GameweekNumber;
      pickTeamMonth : CalendarMonth;
      pickTeamSeasonId : SeasonId;
      seasonActive : Bool;
      transferWindowActive : Bool;
      version : Text
    };
  stable var stable_team_value_leaderboards :
    [(SeasonId, TeamValueLeaderboard)];
  stable var stable_total_managers : Nat;
  stable var stable_unique_manager_canister_ids : [CanisterId];
  stable var stable_unique_weekly_leaderboard_canister_ids : [CanisterId];
  stable var stable_usernames : [(PrincipalId, Text)];
  stable var stable_weekly_all_time_high_scores : [HighScoreRecord];
  stable var stable_weekly_ath_prize_pool : Nat64;
  stable var stable_weekly_leaderboard_canister_ids :
    [(SeasonId, [(GameweekNumber, CanisterId)])];
  stable var stable_weekly_rewards : [WeeklyRewards]
};
