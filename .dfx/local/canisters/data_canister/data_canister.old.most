// Version: 1.0.0
type Club =
  {
    abbreviatedName : Text;
    friendlyName : Text;
    id : ClubId;
    name : Text;
    primaryColourHex : Text;
    secondaryColourHex : Text;
    shirtType : ShirtType;
    thirdColourHex : Text
  };
type ClubId = Nat16;
type CountryId = Nat16;
type Fixture =
  {
    awayClubId : ClubId;
    awayGoals : Nat8;
    events : List<PlayerEventData>;
    gameweek : GameweekNumber;
    highestScoringPlayerId : PlayerId;
    homeClubId : ClubId;
    homeGoals : Nat8;
    id : FixtureId;
    kickOff : Int;
    seasonId : SeasonId;
    status : FixtureStatusType
  };
type FixtureId = Nat32;
type FixtureStatusType = {#Active; #Complete; #Finalised; #Unplayed};
type GameweekNumber = Nat8;
type Gender = {#Female; #Male};
type InjuryHistory =
  {description : Text; expectedEndDate : Int; injuryStartDate : Int};
type League =
  {
    abbreviation : Text;
    countryId : CountryId;
    formed : Int;
    governingBody : Text;
    id : LeagueId;
    logo : Blob;
    name : Text;
    relatedGender : Gender;
    teamCount : Nat8
  };
type LeagueId = Nat16;
type List<T> = ?(T, List<T>);
type Player =
  {
    clubId : ClubId;
    currentLoanEndDate : Int;
    dateOfBirth : Int;
    firstName : Text;
    gender : Gender;
    id : PlayerId;
    injuryHistory : List<InjuryHistory>;
    lastName : Text;
    latestInjuryEndDate : Int;
    nationality : CountryId;
    parentClubId : Nat16;
    position : PlayerPosition;
    retirementDate : Int;
    seasons : List<PlayerSeason>;
    shirtNumber : Nat8;
    status : PlayerStatus;
    transferHistory : List<TransferHistory>;
    valueHistory : List<ValueHistory>;
    valueQuarterMillions : Nat16
  };
type PlayerEventData =
  {
    clubId : ClubId;
    eventEndMinute : Nat8;
    eventStartMinute : Nat8;
    eventType : PlayerEventType;
    fixtureId : FixtureId;
    playerId : Nat16
  };
type PlayerEventType =
  {
    #Appearance;
    #CleanSheet;
    #Goal;
    #GoalAssisted;
    #GoalConceded;
    #HighestScoringPlayer;
    #KeeperSave;
    #OwnGoal;
    #PenaltyMissed;
    #PenaltySaved;
    #RedCard;
    #YellowCard
  };
type PlayerGameweek =
  {events : List<PlayerEventData>; number : GameweekNumber; points : Int16};
type PlayerId = Nat16;
type PlayerPosition = {#Defender; #Forward; #Goalkeeper; #Midfielder};
type PlayerSeason =
  {gameweeks : List<PlayerGameweek>; id : SeasonId; totalPoints : Int16};
type PlayerStatus = {#Active; #FreeAgent; #OnLoan; #Retired};
type Season =
  {
    fixtures : List<Fixture>;
    id : Nat16;
    name : Text;
    postponedFixtures : List<Fixture>;
    year : Nat16
  };
type SeasonId = Nat16;
type ShirtType = {#Filled; #Striped};
type TimerInfo = {callbackName : Text; id : Int; triggerTime : Int};
type TransferHistory =
  {
    fromClub : ClubId;
    fromLeagueId : LeagueId;
    loanEndDate : Int;
    toClub : ClubId;
    toLeagueId : LeagueId;
    transferDate : Int
  };
type ValueHistory = {changedOn : Int; newValue : Nat16; oldValue : Nat16};
actor {
  stable var clubsInAdministration : [Club];
  stable var dataInitialised : Bool;
  stable var freeAgents : [Player];
  stable var leagueClubs : [(LeagueId, [Club])];
  stable var leaguePlayers : [(LeagueId, [Player])];
  stable var leagueSeasons : [(LeagueId, [Season])];
  stable var leagues : [League];
  stable var nextPlayerId : Nat16;
  stable var retiredFreeAgents : [Player];
  stable var retiredLeaguePlayers : [(LeagueId, [Player])];
  stable var timers : [TimerInfo];
  stable var unknownPlayers : [Player];
  stable var untrackedClubs : [Club]
};
